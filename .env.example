# Music Festival Assistant Example Environment Variables

# Admin login and password (temporary hardcoded in environment variables)
ADMIN_USERNAME=<your_admin_username>
ADMIN_PASSWORD=<your_admin_password>

# External APIs (for future use)
OPENAI_API_KEY=<your_openai_api_key>
OPENAI_MODEL=o3
OPENAI_SIMPLE_MODEL=o4-mini
OPENAI_MAX_TOKENS=8000
OPENAI_TEMPERATURE=0.8

# Google Vertex AI Configuration (for testing with Google provider)
GOOGLE_VERTEX_CLIENT_EMAIL=<your_google_vertex_client_email>
GOOGLE_VERTEX_PRIVATE_KEY=<your_google_vertex_private_key>
GOOGLE_VERTEX_PRIVATE_KEY_ID=<your_google_vertex_private_key_id>
GOOGLE_VERTEX_PROJECT_ID=<your_google_vertex_project_id>
GOOGLE_VERTEX_MODEL=gemini-2.5-pro
GOOGLE_VERTEX_SIMPLE_MODEL=gemini-2.5-flash
# gimini is the only who works quite stable
# gemini-2.5-pro work good with creating pasrerFunction, but quite slow
# gemini-2.5-flash work good with creating pasrerFunction, but very slow
GOOGLE_VERTEX_MAX_TOKENS=30000
GOOGLE_VERTEX_TEMPERATURE=0.8

# Groq API Configuration
GROQ_API_KEY=<your_groq_api_key>
GROQ_MODEL=meta-llama/llama-4-maverick-17b-128e-instruct
GROQ_SIMPLE_MODEL=meta-llama/llama-4-maverick-17b-128e-instruct
# all groq models work bad with creating pasrerFunction
GROQ_MAX_TOKENS=8000
GROQ_TEMPERATURE=0.8

# AI Service Configuration
AI_PROVIDER=vertex
AI_SIMPLE_PROVIDER=openai


# Logging Level
LOG_LEVEL=debug

# Spotify API Configuration
SPOTIFY_CLIENT_ID=<your_spotify_client_id>
SPOTIFY_CLIENT_SECRET=<your_spotify_client_secret>

# Database Configuration
# Recommended for most uses
DATABASE_URL=<your_database_url>

# Neon Auth environment variables for Next.js
NEXT_PUBLIC_STACK_PROJECT_ID=<your_neon_project_id>
NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY=<your_neon_publisher_client_key>
STACK_SECRET_SERVER_KEY=<your_neon_secret_server_key>
